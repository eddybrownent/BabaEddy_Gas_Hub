{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useEffect, useState } from 'react';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { auth, db } from \"../firebaseConfig\";\nimport { setDoc, doc, getDoc } from \"firebase/firestore\";\nexport function useAuthentication() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setUser = _useState2[1];\n  var _useState3 = useState(undefined),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isAuthenticated = _useState4[0],\n    setIsAuthenticated = _useState4[1];\n  useEffect(function () {\n    var unsubscribeFromAuthStateChanged = onAuthStateChanged(auth, function (user) {\n      if (user) {\n        setIsAuthenticated(true);\n        setUser(user);\n        updateUserData(user.uid);\n      } else {\n        setIsAuthenticated(false);\n        setUser(null);\n      }\n    });\n    return function () {\n      return unsubscribeFromAuthStateChanged();\n    };\n  }, []);\n  var signup = function () {\n    var _ref = _asyncToGenerator(function* (email, password, phoneNumber, address, username) {\n      try {\n        var _userCredential$user;\n        var userCredential = yield createUserWithEmailAndPassword(auth, email, password);\n        console.log('Signup successful. User credential:', userCredential);\n        setIsAuthenticated(true);\n        setUser(userCredential.user);\n        var userId = userCredential.user.uid;\n        yield setDoc(doc(db, \"users\", userCredential == null ? void 0 : (_userCredential$user = userCredential.user) == null ? void 0 : _userCredential$user.uid), {\n          username: username,\n          email: email,\n          phoneNumber: phoneNumber,\n          address: address,\n          userId: userCredential == null ? void 0 : userCredential.user.uid\n        });\n        return _objectSpread({\n          userId: userCredential.user.uid\n        }, userCredential.user);\n      } catch (error) {\n        var errorMessage = 'Signup failed';\n        if (error.code === 'auth/email-already-in-use') {\n          errorMessage = 'This email is already in use.';\n        } else if (error.code === 'auth/weak-password') {\n          errorMessage = 'The password is too weak.';\n        } else if (error.code === 'auth/invalid-email') {\n          errorMessage = 'Invalid email address.';\n        }\n        throw Error(errorMessage);\n      }\n    });\n    return function signup(_x, _x2, _x3, _x4, _x5) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var updateUserData = function () {\n    var _ref2 = _asyncToGenerator(function* (userId, username) {\n      var userDocRef = doc(db, 'users', userId);\n      var docSnap = yield getDoc(userDocRef);\n      console.log('Document snapshot:', docSnap);\n      if (docSnap.exists()) {\n        var data = docSnap.data();\n        console.log('User data:', data);\n        setUser(_objectSpread(_objectSpread({}, data), {}, {\n          username: data.username,\n          phoneNumber: data.phoneNumber,\n          userId: data.uid\n        }));\n        return data;\n      } else {\n        console.error('User data not found');\n        return null;\n      }\n    });\n    return function updateUserData(_x6, _x7) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var login = function () {\n    var _ref3 = _asyncToGenerator(function* (email, password) {\n      try {\n        var userCredential = yield signInWithEmailAndPassword(auth, email, password);\n        setIsAuthenticated(true);\n        setUser(userCredential.user);\n        return userCredential.user;\n      } catch (error) {\n        var errorMessage = 'Login failed';\n        if (error.code === 'auth/user-not-found' || error.code === 'auth/wrong-password') {\n          errorMessage = 'Invalid email or password. Please try again.';\n        } else if (error.code === 'auth/too-many-requests') {\n          errorMessage = 'Too many unsuccessful login attempts. Please try again later.';\n        } else if (error.code === 'auth/invalid-credential') {\n          errorMessage = 'Invalid credentials provided. Please check your email and password and try again.';\n        } else {\n          errorMessage = 'An error occurred while logging in. Please try again.';\n        }\n        throw Error(errorMessage);\n      }\n    });\n    return function login(_x8, _x9) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var logout = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        yield signOut(auth);\n        setIsAuthenticated(false);\n        setUser(null);\n      } catch (error) {\n        console.error('Logout failed:', error.message);\n        throw error;\n      }\n    });\n    return function logout() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return {\n    user: user,\n    isAuthenticated: isAuthenticated,\n    updateUserData: updateUserData,\n    signup: signup,\n    login: login,\n    logout: logout\n  };\n}","map":{"version":3,"names":["React","useEffect","useState","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","auth","db","setDoc","doc","getDoc","useAuthentication","_useState","_useState2","_slicedToArray","user","setUser","_useState3","undefined","_useState4","isAuthenticated","setIsAuthenticated","unsubscribeFromAuthStateChanged","updateUserData","uid","signup","_ref","_asyncToGenerator","email","password","phoneNumber","address","username","_userCredential$user","userCredential","console","log","userId","_objectSpread","error","errorMessage","code","Error","_x","_x2","_x3","_x4","_x5","apply","arguments","_ref2","userDocRef","docSnap","exists","data","_x6","_x7","login","_ref3","_x8","_x9","logout","_ref4","message"],"sources":["/home/edwin/BabaEddy_Gas_Hub/context/useAuthentication.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { auth, db } from '../firebaseConfig';\nimport { setDoc, doc, getDoc } from \"firebase/firestore\";\n\n\nexport function useAuthentication() {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(undefined);\n\n  useEffect(() => {\n    const unsubscribeFromAuthStateChanged = onAuthStateChanged(auth, (user) => {\n      if (user) {\n        // User is signed in\n        setIsAuthenticated(true);\n        setUser(user);\n        updateUserData(user.uid)\n      } else {\n        // User is signed out\n        setIsAuthenticated(false);\n        setUser(null); // Set user state to null\n      }\n    });\n\n    // Clean up subscription on unmount\n    return () => unsubscribeFromAuthStateChanged();\n  }, []);\n\n  // Function to sign up a new user\n  const signup = async (email, password, phoneNumber, address, username) => {\n    try {\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      \n      console.log('Signup successful. User credential:', userCredential);\n      setIsAuthenticated(true); // Set isAuthenticated to true after successful signup\n      setUser(userCredential.user);\n\n      // Get the newly created user's UID\n      const userId = userCredential.user.uid;\n\n      // Create a document for the user in the users collection\n\n      // Set user data in the document\n      await setDoc(doc(db, \"users\", userCredential?.user?.uid), {\n        username: username,\n        email: email,\n        phoneNumber: phoneNumber,\n        address: address,\n        userId: userCredential?.user.uid\n      });\n\n      return {userId: userCredential.user.uid, ...userCredential.user };\n    } catch (error) {\n      // Customize the error message\n      let errorMessage = 'Signup failed';\n      if (error.code === 'auth/email-already-in-use') {\n        errorMessage = 'This email is already in use.';\n      } else if (error.code === 'auth/weak-password') {\n        errorMessage = 'The password is too weak.';\n      } else if (error.code === 'auth/invalid-email') {\n        errorMessage = 'Invalid email address.';\n      }\n      // console.error(errorMessage, error);\n      throw Error(errorMessage);\n    }\n  };\n\n\n  const updateUserData = async (userId, username) => {\n    const userDocRef = doc(db, 'users', userId);\n    const docSnap = await getDoc(userDocRef);\n  \n    console.log('Document snapshot:', docSnap);\n  \n    if (docSnap.exists()) {\n      let data = docSnap.data();\n      console.log('User data:', data);\n      setUser({ ...data, username: data.username, phoneNumber: data.phoneNumber, userId: data.uid });\n      return data; // Return the fetched user data\n    } else {\n      console.error('User data not found');\n      return null; // Return null if user data does not exist\n    }\n  };\n\n  // Function to log in an existing user\n  const login = async (email, password) => {\n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      setIsAuthenticated(true); // Set isAuthenticated to true after successful login\n      setUser(userCredential.user);\n      return userCredential.user;\n    } catch (error) {\n      // Customize the error message\n      let errorMessage = 'Login failed';\n      if (error.code === 'auth/user-not-found' || error.code === 'auth/wrong-password') {\n        errorMessage = 'Invalid email or password. Please try again.';\n      } else if (error.code === 'auth/too-many-requests') {\n        errorMessage = 'Too many unsuccessful login attempts. Please try again later.';\n      } else if (error.code === 'auth/invalid-credential') {\n        errorMessage = 'Invalid credentials provided. Please check your email and password and try again.';\n      } else {\n        errorMessage = 'An error occurred while logging in. Please try again.';\n      }\n      // console.error(errorMessage, error);\n      throw Error(errorMessage);\n    }\n  };\n  \n  // Function to log out the current user\n  const logout = async () => {\n    try {\n      await signOut(auth);\n      setIsAuthenticated(false); // Set isAuthenticated to false after successful logout\n      setUser(null);\n    } catch (error) {\n      console.error('Logout failed:', error.message);\n      throw error;\n    }\n  };\n\n  return {\n    user,\n    isAuthenticated,\n    updateUserData,\n    signup,\n    login,\n    logout,\n  };\n}\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,8BAA8B,EAAEC,0BAA0B,EAAEC,OAAO,EAAEC,kBAAkB,QAAQ,eAAe;AACvH,SAASC,IAAI,EAAEC,EAAE;AACjB,SAASC,MAAM,EAAEC,GAAG,EAAEC,MAAM,QAAQ,oBAAoB;AAGxD,OAAO,SAASC,iBAAiBA,CAAA,EAAG;EAClC,IAAAC,SAAA,GAAwBX,QAAQ,CAAC,IAAI,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EACpB,IAAAI,UAAA,GAA8ChB,QAAQ,CAACiB,SAAS,CAAC;IAAAC,UAAA,GAAAL,cAAA,CAAAG,UAAA;IAA1DG,eAAe,GAAAD,UAAA;IAAEE,kBAAkB,GAAAF,UAAA;EAE1CnB,SAAS,CAAC,YAAM;IACd,IAAMsB,+BAA+B,GAAGjB,kBAAkB,CAACC,IAAI,EAAE,UAACS,IAAI,EAAK;MACzE,IAAIA,IAAI,EAAE;QAERM,kBAAkB,CAAC,IAAI,CAAC;QACxBL,OAAO,CAACD,IAAI,CAAC;QACbQ,cAAc,CAACR,IAAI,CAACS,GAAG,CAAC;MAC1B,CAAC,MAAM;QAELH,kBAAkB,CAAC,KAAK,CAAC;QACzBL,OAAO,CAAC,IAAI,CAAC;MACf;IACF,CAAC,CAAC;IAGF,OAAO;MAAA,OAAMM,+BAA+B,CAAC,CAAC;IAAA;EAChD,CAAC,EAAE,EAAE,CAAC;EAGN,IAAMG,MAAM;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,KAAK,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,OAAO,EAAEC,QAAQ,EAAK;MACxE,IAAI;QAAA,IAAAC,oBAAA;QACF,IAAMC,cAAc,SAAShC,8BAA8B,CAACI,IAAI,EAAEsB,KAAK,EAAEC,QAAQ,CAAC;QAElFM,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEF,cAAc,CAAC;QAClEb,kBAAkB,CAAC,IAAI,CAAC;QACxBL,OAAO,CAACkB,cAAc,CAACnB,IAAI,CAAC;QAG5B,IAAMsB,MAAM,GAAGH,cAAc,CAACnB,IAAI,CAACS,GAAG;QAKtC,MAAMhB,MAAM,CAACC,GAAG,CAACF,EAAE,EAAE,OAAO,EAAE2B,cAAc,qBAAAD,oBAAA,GAAdC,cAAc,CAAEnB,IAAI,qBAApBkB,oBAAA,CAAsBT,GAAG,CAAC,EAAE;UACxDQ,QAAQ,EAAEA,QAAQ;UAClBJ,KAAK,EAAEA,KAAK;UACZE,WAAW,EAAEA,WAAW;UACxBC,OAAO,EAAEA,OAAO;UAChBM,MAAM,EAAEH,cAAc,oBAAdA,cAAc,CAAEnB,IAAI,CAACS;QAC/B,CAAC,CAAC;QAEF,OAAAc,aAAA;UAAQD,MAAM,EAAEH,cAAc,CAACnB,IAAI,CAACS;QAAG,GAAKU,cAAc,CAACnB,IAAI;MACjE,CAAC,CAAC,OAAOwB,KAAK,EAAE;QAEd,IAAIC,YAAY,GAAG,eAAe;QAClC,IAAID,KAAK,CAACE,IAAI,KAAK,2BAA2B,EAAE;UAC9CD,YAAY,GAAG,+BAA+B;QAChD,CAAC,MAAM,IAAID,KAAK,CAACE,IAAI,KAAK,oBAAoB,EAAE;UAC9CD,YAAY,GAAG,2BAA2B;QAC5C,CAAC,MAAM,IAAID,KAAK,CAACE,IAAI,KAAK,oBAAoB,EAAE;UAC9CD,YAAY,GAAG,wBAAwB;QACzC;QAEA,MAAME,KAAK,CAACF,YAAY,CAAC;MAC3B;IACF,CAAC;IAAA,gBApCKf,MAAMA,CAAAkB,EAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA;MAAA,OAAArB,IAAA,CAAAsB,KAAA,OAAAC,SAAA;IAAA;EAAA,GAoCX;EAGD,IAAM1B,cAAc;IAAA,IAAA2B,KAAA,GAAAvB,iBAAA,CAAG,WAAOU,MAAM,EAAEL,QAAQ,EAAK;MACjD,IAAMmB,UAAU,GAAG1C,GAAG,CAACF,EAAE,EAAE,OAAO,EAAE8B,MAAM,CAAC;MAC3C,IAAMe,OAAO,SAAS1C,MAAM,CAACyC,UAAU,CAAC;MAExChB,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEgB,OAAO,CAAC;MAE1C,IAAIA,OAAO,CAACC,MAAM,CAAC,CAAC,EAAE;QACpB,IAAIC,IAAI,GAAGF,OAAO,CAACE,IAAI,CAAC,CAAC;QACzBnB,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEkB,IAAI,CAAC;QAC/BtC,OAAO,CAAAsB,aAAA,CAAAA,aAAA,KAAMgB,IAAI;UAAEtB,QAAQ,EAAEsB,IAAI,CAACtB,QAAQ;UAAEF,WAAW,EAAEwB,IAAI,CAACxB,WAAW;UAAEO,MAAM,EAAEiB,IAAI,CAAC9B;QAAG,EAAE,CAAC;QAC9F,OAAO8B,IAAI;MACb,CAAC,MAAM;QACLnB,OAAO,CAACI,KAAK,CAAC,qBAAqB,CAAC;QACpC,OAAO,IAAI;MACb;IACF,CAAC;IAAA,gBAfKhB,cAAcA,CAAAgC,GAAA,EAAAC,GAAA;MAAA,OAAAN,KAAA,CAAAF,KAAA,OAAAC,SAAA;IAAA;EAAA,GAenB;EAGD,IAAMQ,KAAK;IAAA,IAAAC,KAAA,GAAA/B,iBAAA,CAAG,WAAOC,KAAK,EAAEC,QAAQ,EAAK;MACvC,IAAI;QACF,IAAMK,cAAc,SAAS/B,0BAA0B,CAACG,IAAI,EAAEsB,KAAK,EAAEC,QAAQ,CAAC;QAC9ER,kBAAkB,CAAC,IAAI,CAAC;QACxBL,OAAO,CAACkB,cAAc,CAACnB,IAAI,CAAC;QAC5B,OAAOmB,cAAc,CAACnB,IAAI;MAC5B,CAAC,CAAC,OAAOwB,KAAK,EAAE;QAEd,IAAIC,YAAY,GAAG,cAAc;QACjC,IAAID,KAAK,CAACE,IAAI,KAAK,qBAAqB,IAAIF,KAAK,CAACE,IAAI,KAAK,qBAAqB,EAAE;UAChFD,YAAY,GAAG,8CAA8C;QAC/D,CAAC,MAAM,IAAID,KAAK,CAACE,IAAI,KAAK,wBAAwB,EAAE;UAClDD,YAAY,GAAG,+DAA+D;QAChF,CAAC,MAAM,IAAID,KAAK,CAACE,IAAI,KAAK,yBAAyB,EAAE;UACnDD,YAAY,GAAG,mFAAmF;QACpG,CAAC,MAAM;UACLA,YAAY,GAAG,uDAAuD;QACxE;QAEA,MAAME,KAAK,CAACF,YAAY,CAAC;MAC3B;IACF,CAAC;IAAA,gBArBKiB,KAAKA,CAAAE,GAAA,EAAAC,GAAA;MAAA,OAAAF,KAAA,CAAAV,KAAA,OAAAC,SAAA;IAAA;EAAA,GAqBV;EAGD,IAAMY,MAAM;IAAA,IAAAC,KAAA,GAAAnC,iBAAA,CAAG,aAAY;MACzB,IAAI;QACF,MAAMvB,OAAO,CAACE,IAAI,CAAC;QACnBe,kBAAkB,CAAC,KAAK,CAAC;QACzBL,OAAO,CAAC,IAAI,CAAC;MACf,CAAC,CAAC,OAAOuB,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACwB,OAAO,CAAC;QAC9C,MAAMxB,KAAK;MACb;IACF,CAAC;IAAA,gBATKsB,MAAMA,CAAA;MAAA,OAAAC,KAAA,CAAAd,KAAA,OAAAC,SAAA;IAAA;EAAA,GASX;EAED,OAAO;IACLlC,IAAI,EAAJA,IAAI;IACJK,eAAe,EAAfA,eAAe;IACfG,cAAc,EAAdA,cAAc;IACdE,MAAM,EAANA,MAAM;IACNgC,KAAK,EAALA,KAAK;IACLI,MAAM,EAANA;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}